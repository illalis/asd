using Parser.Core;
using Parser.Core.Habra;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using System.IO;
using Microsoft.VisualBasic;
namespace Parser
{


    public partial class FormMain : Form
    {
        ParserWorker<string[]> parser;
        
        public FormMain()
        {
            InitializeComponent();

            parser = new ParserWorker<string[]>(
                    new KamtoDayParser()
                );

            parser.OnCompleted += Parser_OnCompleted;
            parser.OnNewData += Parser_OnNewData;
            
        }

    

        private void Parser_OnNewData(object arg1, string[] arg2)
        {
            ListTitles.Items.AddRange(arg2);
           

        }

        private void Parser_OnCompleted(object obj)
        {
            MessageBox.Show("All works done!");
        }

        

        private async void ButtonStart_ClickAsync(object sender, EventArgs e)
        {
            parser.Settings = new KamToDaySettings((int)NumericStart.Value, (int)NumericEnd.Value);
            parser.Start();

            





        }

        private void ButtonAbort_Click(object sender, EventArgs e)
        {
            parser.Abort();
        }

        private void FormMain_Load(object sender, EventArgs e)
        {

        }

        private async void button1_ClickAsync(object sender, EventArgs e)
        {


            List<string> trash = new List<string> {

        "Ещё 25 домов Петропавловска украсят фестивальные граффити в следующем году",

        "Участок дороги из Милькова в Усть-Камчатск расчистили от снега и открыли для маршрутного транспорта",

        "На Камчатке с нового года могут увеличить стоимость проезда в общественном транспорте - власти",

        "Ситуацию с подтоплением Крутогоровского поставил на контроль губернатор Камчатки",



        };

            List<string> list2 = new List<string>();


            List<string> arg = File.ReadAllLines("D:\\AllData.txt").ToList();
          //  List<string> arg2 = new List<string>;
            List<string> arg3 = File.ReadAllLines("D:\\AutoGeneratedTimeLine.txt").ToList();
            string year = "2021";
            int indexofdot;

              for (int i = 0; i <arg.Count-1; i++) {

                if (arg[i].Contains(":"))
                {

                    indexofdot = arg[i].IndexOf(",");
                    if (indexofdot > 0)
                    {
                        arg[i] = arg[i].Remove(indexofdot, 7);

                        arg[i] = arg[i].Insert(indexofdot, "-" + year);

                        if (arg[i].Contains("вчера"))
                            arg[i] = arg[i].Replace("вчера", "4 декабря");
                        if ((arg[i].Contains("января")) && (arg[i + 1].Contains("декабрь")))
                            year = (Convert.ToInt32(year) - 1).ToString();
                    }
                }
                

            }

            for (int i = 0; i < arg.Count-1; i++)
                arg[i] = arg[i + 1] + "___" + arg[i];

            List<string> arg2 =  arg.Distinct().ToList();

            //  if ("Ещё 25 домов Петропавловска украсят фестивальные граффити в следующем году" == "Ещё 25 домов Петропавловска украсят фестивальные граффити в следующем году")
            //   MessageBox.Show("AAAAAAAAAAAAAAAAAAA");
            /*for (int i = 0; i < arg.Count-1; i++) {

                if (arg[i].Contains("Ещё 25 домов Петропавловска украсят фестивальные граффити в следующем году") || (arg[i].Contains("Участок дороги из Милькова в Усть-Камчатск расчистили от снега и открыли для маршрутного транспорта")) || (arg[i].Contains("На Камчатке с нового года могут увеличить стоимость проезда в общественном транспорте - власти")) || arg.Contains("Ситуацию с подтоплением Крутогоровского поставил на контроль губернатор Камчатки")) {

                   arg[i] = arg[i].Remove(0, arg[i].Length);
                   arg[i + 1] = arg[i+1].Remove(0, arg[i + 1].Length);

                
                }

            }
            */


            /*    for(int i = 0; i < arg2.Count; i++)
                {
                    if (((arg2[i].Contains(":"))||(arg2[i].Contains("1 ноября, 12:25"))||(arg2[i].Contains("31 октября, 13:47"))))

                        arg2.RemoveAt(i);



               
        };
          */     // File.WriteAllLines("D:\\DataOnlyThemes.txt", arg2);
            StreamWriter fas = new StreamWriter("D:\\DataOnlyThemes.txt", true);
            for (int i = 0; i < arg2.Count - 1; i++)
            {
             if(i%2 == 0)
                fas.WriteLine( arg2[i]);
            }
            fas.Close();


            arg2 = File.ReadAllLines("D:\\DataOnlyThemes.txt").ToList();




            ChromeDriverService service = ChromeDriverService.CreateDefaultService();
            service.HideCommandPromptWindow = true;
            var options = new ChromeOptions();
            options.AddArgument("--window-position=-32000,-32000");

            
                             WebDriver driver = new ChromeDriver();

               
                            WebDriver driver2 = new ChromeDriver();
                           driver.Url = @"https://ru.megaindex.com/a/textanalysis";
                           driver2.Url = @"https://ru.megaindex.com/a/tcategories";
                            for (int i = 0; i < 10; i++)
                            {
                                try
                                {
                                    driver.FindElement(By.XPath("//textarea[contains(@placeholder,'Введите поисковый запрос')]"));
                                    await Task.Delay(1000);
                                    break;
                                }
                                catch (Exception)
                                {
                                    await Task.Delay(1000);
                                }
                            }

                            driver.FindElement(By.XPath("//textarea[contains(@placeholder,'Введите поисковый запрос')]")).SendKeys("first");

                            await Task.Delay(100);

                            //button[contains(@class,'pure-button')]
                            driver.FindElement(By.XPath("//button[@class='pure-button'][contains(.,'ПОКАЗАТЬ')]")).Click();

                            await Task.Delay(100);

                            var msg = driver.FindElement(By.XPath("/html/body/div[1]/div/div/main/div[2]/div[1]/div[2]/div/div/div[2]")).Text;
                            // / html / body / div[1] / div / div / main / div[2] / div[1] / div[2] / div / div / div[2] / text()
                            //MessageBox.Show(msg);
                            string str;
                            int indx2;
                         
                            await Task.Delay(100);
                            for (int i = 0; i < arg2.Count; i++)
                            {
                //
               
                    indx2 = arg2[i].IndexOf("___") + 3;

                //      MessageBox.Show(arg2[i].Substring(indx2).ToString());
                driver2.FindElement(By.XPath("/html/body/div[2]/div/div[2]/div/div/main/div[2]/div/div/div/div/div[1]/div/div/a[2]")).Click();
                await Task.Delay(100);
                driver2.FindElement(By.XPath("/html/body/div[2]/div/div[2]/div/div/main/div[2]/div/div/div/div/div[1]/div/div/form[2]/div/div[1]/div/textarea")).SendKeys(arg2[i].Substring(indx2).ToString());
                await Task.Delay(100);
                driver2.FindElement(By.XPath("/html/body/div[2]/div/div[2]/div/div/main/div[2]/div/div/div/div/div[1]/div/div/form[2]/div/button")).Click();
                await Task.Delay(100);
                str = driver2.FindElement(By.XPath("/html/body/div[1]/div/div/main/div[2]/div[3]/div[1]/div[1]/a")).Text.ToString() + " " + driver2.FindElement(By.XPath("/html/body/div[1]/div/div/main/div[2]/div[3]/div/div[2]")).Text.ToString();
                await Task.Delay(100);
                driver2.FindElement(By.XPath("/html/body/div[1]/div/div/main/div[2]/form/div[2]/input")).Click();
                await Task.Delay(100);

                string[] stringArray = { "Отдых", "Хобби", "Военно-исторические клубы", "Культура ", "Музеи", "Краеведческие, этнографические музеи", "Туризм", "Развлечения", "Непознанное", "НЛО" };

                if (stringArray.Any(str.Contains))
                {
                    driver.FindElement(By.XPath("/ html / body / div[1] / div / div / main / div[2] / form / div[2] / textarea")).Clear();
                    await Task.Delay(100);
                    driver.FindElement(By.XPath("/ html / body / div[1] / div / div / main / div[2] / form / div[2] / textarea")).SendKeys(arg2[i].Substring(indx2).ToString());
                    await Task.Delay(100);
                    driver.FindElement(By.XPath("/html/body/div[1]/div/div/main/div[2]/form/div[1]/div[1]/input[2]")).Click();
                    await Task.Delay(100);
                    list2.Add(driver.FindElement(By.XPath("/html/body/div[1]/div/div/main/div[2]/div[1]/div[2]/div/div/div[2]")).Text.ToString());
            
                }
                else
                    list2.Add("0");
              //  MessageBox.Show(list2[0] + list2[1]);
                            
                                    }

        
        listBox1.DataSource = list2;

            //MessageBox.Show("countARG =" + arg2.Count.ToString() + " count list2 =" + list2.Count.ToString());


            string substr;
            for (int i = 0; i <arg2.Count; i++) {

                if (list2[i] != "0")

                    substr = list2[i].Substring(0, list2[i].IndexOf(" "));

                else
                    substr = "0";

                if (Convert.ToInt32(substr) > 120)

                    arg2[i] = arg2[i] + "____" + substr;

                else

                   arg2[i] =  arg2[i].Remove(0);

            }
                

                File.WriteAllLines("D:\\AutoGeneratedTimeLine.txt", arg2);
            
            string[] notWhiteSpace = File.ReadAllLines("D:\\AutoGeneratedTimeLine.txt").
            Where(x => !string.IsNullOrWhiteSpace(x)).ToArray();
            File.WriteAllLines("D:\\AutoGeneratedTimeLine.txt", notWhiteSpace);


        }

        private void button2_Click(object sender, EventArgs e)
        {
            File.WriteAllText(@"D:\\AllData.txt", string.Empty);
            File.WriteAllText(@"D:\\DataOnlyThemes.txt", string.Empty);
        }
    }
}

